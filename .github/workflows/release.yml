name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Checkout full history + tags
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      # Calculate next version
      - name: Determine next version
        id: version
        run: |
          LAST_TAG=$(git fetch --tags && git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
          echo "Last tag: $LAST_TAG"
          VERSION=${LAST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

          PATCH=$((PATCH + 1))
          if [ $PATCH -gt 9 ]; then
            PATCH=0
            MINOR=$((MINOR + 1))
            if [ $MINOR -gt 9 ]; then
              MINOR=0
              MAJOR=$((MAJOR + 1))
            fi
          fi

          NEXT_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "Next version: $NEXT_VERSION"
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT

      # Configure Git for tagging
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Create tag
      - name: Create tag
        run: |
          git tag ${{ steps.version.outputs.next_version }}
          git push origin ${{ steps.version.outputs.next_version }}

      # Install GoReleaser
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          install: true

      # Run GoReleaser
      - name: Run GoReleaser
        run: goreleaser release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

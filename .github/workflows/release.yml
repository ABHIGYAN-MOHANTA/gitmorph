name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Auto Release
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed to get full history for tags

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      # Determine next tag version
      - name: Determine next version
        id: next_version
        run: |
          git fetch --tags
          LAST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
          echo "Last tag: $LAST_TAG"

          VERSION=${LAST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

          while true; do
            PATCH=$((PATCH + 1))
            if [ $PATCH -gt 9 ]; then
              PATCH=0
              MINOR=$((MINOR + 1))
              if [ $MINOR -gt 9 ]; then
                MINOR=0
                MAJOR=$((MAJOR + 1))
              fi
            fi

            NEXT_VERSION="v$MAJOR.$MINOR.$PATCH"

            if ! git rev-parse "$NEXT_VERSION" >/dev/null 2>&1; then
              break
            fi
          done

          echo "Next version: $NEXT_VERSION"
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT

      # Configure git to push tags using PUBLISHER_TOKEN
      - name: Configure Git for pushing tags
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.PUBLISHER_TOKEN }}@github.com/${{ github.repository }}.git

      # Create and push the tag
      - name: Create and push tag
        run: |
          git tag ${{ steps.next_version.outputs.next_version }}
          git push origin ${{ steps.next_version.outputs.next_version }}

      # Install GoReleaser and release
      - name: Install and Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISHER_TOKEN }}
